import{_ as r,c as t,a5 as a,o as n}from"./chunks/framework.ZkcU21Jo.js";const p=JSON.parse('{"title":"Kerchunk","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),c={name:"index.md"};function l(o,e,i,s,u,d){return n(),t("div",null,e[0]||(e[0]=[a('<h1 id="kerchunk" tabindex="-1">Kerchunk <a class="header-anchor" href="#kerchunk" aria-label="Permalink to &quot;Kerchunk&quot;">â€‹</a></h1><p>Documentation for <a href="https://github.com/JuliaIO/Kerchunk.jl" target="_blank" rel="noreferrer">Kerchunk</a>.</p><ul><li><a href="#Kerchunk.ReferenceStore"><code>Kerchunk.ReferenceStore</code></a></li><li><a href="#Kerchunk._get_file_bytes"><code>Kerchunk._get_file_bytes</code></a></li><li><a href="#Kerchunk.apply_templates-Tuple{ReferenceStore, String}"><code>Kerchunk.apply_templates</code></a></li><li><a href="#Kerchunk.materialize-Tuple{Union{String, FilePathsBase.AbstractPath}, ReferenceStore}"><code>Kerchunk.materialize</code></a></li><li><a href="#Kerchunk.readbytes-Tuple{Any, Integer, Integer}"><code>Kerchunk.readbytes</code></a></li><li><a href="#Kerchunk.resolve_uri-Union{Tuple{HasTemplates}, Tuple{ReferenceStore{&lt;:Any, HasTemplates}, String}} where HasTemplates"><code>Kerchunk.resolve_uri</code></a></li></ul><div class="warning custom-block"><p class="custom-block-title">Missing docstring.</p><p>Missing docstring for <code>ReferenceStore</code>. Check Documenter&#39;s build log for details.</p></div>',4)]))}const f=r(c,[["render",l]]);export{p as __pageData,f as default};
