var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Kerchunk","category":"page"},{"location":"#Kerchunk","page":"Home","title":"Kerchunk","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Kerchunk.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Kerchunk]","category":"page"},{"location":"#Kerchunk._get_file_bytes","page":"Home","title":"Kerchunk._get_file_bytes","text":"_get_file_bytes(store::ReferenceStore, reference)\n\nBy hook or by crook, this function will return the bytes for the given reference. The reference could be a base64 encoded binary string, a path to a file, or a subrange of a file.\n\n\n\n\n\n","category":"function"},{"location":"#Kerchunk.apply_templates-Tuple{ReferenceStore, String}","page":"Home","title":"Kerchunk.apply_templates","text":"apply_templates(store::ReferenceStore, source::String)\n\nThis function applies the templates stored in store to the source string, and returns the resolved string.\n\nIt uses Mustache.jl under the hood, but all {{template}} values are set to not URI-encode characters.\n\n\n\n\n\n","category":"method"},{"location":"#Kerchunk.materialize-Tuple{Union{String, FilePathsBase.AbstractPath}, ReferenceStore}","page":"Home","title":"Kerchunk.materialize","text":"materialize(path, store::ReferenceStore)\n\nMaterialize a Zarr directory from a Kerchunk catalog.  This actually downloads and writes the files to the given path, and you can open that with any Zarr reader.\n\n\n\n\n\n","category":"method"},{"location":"#Kerchunk.readbytes-Tuple{Any, Integer, Integer}","page":"Home","title":"Kerchunk.readbytes","text":"readbytes(path, start::Integer, stop::Integer)::Vector{UInt8}\n\nRead bytes from a file at a given range.\n\n\n\n\n\n","category":"method"},{"location":"#Kerchunk.resolve_uri-Union{Tuple{HasTemplates}, Tuple{ReferenceStore{<:Any, HasTemplates}, String}} where HasTemplates","page":"Home","title":"Kerchunk.resolve_uri","text":"resolve_uri(store::ReferenceStore, source::String)\n\nThis function resolves a string which may or may not have templating to a URI.\n\n\n\n\n\n","category":"method"}]
}
